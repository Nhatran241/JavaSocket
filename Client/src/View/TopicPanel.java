/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Services.Interfaces.Interfaces;
import Services.MyClient;
import java.awt.BorderLayout;
import java.awt.Font;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javalibrary.model.reponse.RelatedTopicReponse;
import javalibrary.model.reponse.SearchOverTimeReponse;
import javalibrary.model.request.RelatedTopicRequest;
import javalibrary.model.request.SearchOvertimeRequest;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author trann
 */
public class TopicPanel extends javax.swing.JPanel {

    /**
     * Creates new form SearchOverTimePanel
     */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPane = new java.awt.ScrollPane();
        btn_previous = new javax.swing.JButton();
        btn_next = new javax.swing.JButton();
        combokeyword = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfpage = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1236, 524));

        btn_previous.setText("previous page");
        btn_previous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_previousActionPerformed(evt);
            }
        });

        btn_next.setText("next page");
        btn_next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nextActionPerformed(evt);
            }
        });

        combokeyword.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combokeywordItemStateChanged(evt);
            }
        });
        combokeyword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combokeywordActionPerformed(evt);
            }
        });

        jLabel1.setText("Topic for keyword :");

        jLabel2.setText("Page :");

        tfpage.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfpage.setText("1");
        tfpage.setPreferredSize(new java.awt.Dimension(50, 20));

        jButton1.setText("Go");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel1)
                        .addGap(27, 27, 27)
                        .addComponent(combokeyword, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfpage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_previous)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_next, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 599, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_previous, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(combokeyword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(tfpage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1)
                        .addComponent(btn_next)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                .addContainerGap())
        );

        btn_previous.setVisible(false);
        btn_next.setVisible(false);
        tfpage.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (((c < '0') || (c > '9')) && (c != KeyEvent.VK_BACK_SPACE)) {
                    e.consume(); // consume non-numbers
                }else {
                    if(c == '0' && tfpage.getText().trim().length() ==0){
                        e.consume();
                        tfpage.setText("1");
                    }
                }
            }
        });
    }// </editor-fold>//GEN-END:initComponents
    
    private void btn_nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nextActionPerformed
        // TODO add your handling code here:
        relatedTopicRequest.setPageNumber(relatedTopicRequest.getPageNumber()+1);
         showLoading();
        MyClient.getInstance().getRelatedTopic(relatedTopicRequest,new Interfaces.IRelatedTopicListener() {
            @Override
            public void OnGetRelatedTopicSuccess(List<RelatedTopicReponse> listRelatedTopicReponse) {
              
                initData(listRelatedTopicReponse);
                dismisLoading();
            }

            @Override
            public void OnGetRelatedTopicFailed() {
                initData(new ArrayList<>());
                dismisLoading();
          }
        });
    }//GEN-LAST:event_btn_nextActionPerformed

    private void btn_previousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_previousActionPerformed
        // TODO add your handling code here:
        relatedTopicRequest.setPageNumber(relatedTopicRequest.getPageNumber()-1);
         showLoading();
        MyClient.getInstance().getRelatedTopic(relatedTopicRequest,new Interfaces.IRelatedTopicListener() {
            @Override
            public void OnGetRelatedTopicSuccess(List<RelatedTopicReponse> listRelatedTopicReponse) {
                initData(listRelatedTopicReponse);
                dismisLoading();
            }

            @Override
            public void OnGetRelatedTopicFailed() {
                initData(new ArrayList<>());
                dismisLoading();
          }
        });
    }//GEN-LAST:event_btn_previousActionPerformed

    private void combokeywordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combokeywordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combokeywordActionPerformed

    private void combokeywordItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combokeywordItemStateChanged
        // TODO add your handling code here:
        if(relatedTopicRequest ==null)
            return;
        if(evt.getItem().toString() != relatedTopicRequest.getRelatedTopicQuery()){
        relatedTopicRequest.setRelatedTopicQuery(evt.getItem().toString());
        relatedTopicRequest.setPageNumber(1);
        loadData(relatedTopicRequest);
        }
    }//GEN-LAST:event_combokeywordItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(relatedTopicRequest.getPageNumber()+"" != tfpage.getText().trim()){
            if(tfpage.getText().trim().isEmpty()){
                relatedTopicRequest.setPageNumber(1);
            }else{
                relatedTopicRequest.setPageNumber(Integer.parseInt(tfpage.getText().trim()));
            }
            tfpage.setText(relatedTopicRequest.getPageNumber()+"");
            loadData(relatedTopicRequest);
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_next;
    private javax.swing.JButton btn_previous;
    private javax.swing.JComboBox<String> combokeyword;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private java.awt.ScrollPane scrollPane;
    private javax.swing.JTextField tfpage;
    // End of variables declaration//GEN-END:variables
    private void initData(List<RelatedTopicReponse> list) {
        tfpage.setText(relatedTopicRequest.getPageNumber()+"");
           if(relatedTopicRequest.getPageNumber()>1){
                    btn_previous.setVisible(true);
                }else {
                    btn_previous.setVisible(false);
                }
                btn_next.setVisible(true);
                btn_next.invalidate();
                btn_previous.invalidate();
        scrollPane.removeAll();
        if(list.size() > 0){
            JPanel listTopic = new JPanel(new GridLayout(list.size(),0));
            for(int i =0;i<list.size();i++){
                listTopic.add(new TopicItemView(list.get(i)),new GridLayout(i+1,0));
            }
            scrollPane.add(listTopic);
        }else {
            JPanel listTopic = new JPanel(new GridBagLayout());
            JLabel jLabel =new JLabel("No result or Api Limit");
            jLabel.setFont(new Font("Serif", Font.PLAIN, 20));
            listTopic.add(jLabel);
            scrollPane.add(listTopic);
        }

  }
    RelatedTopicRequest relatedTopicRequest;
    List<String> keyword ;
    public void loadData(RelatedTopicRequest relatedTopicRequest){
        this.relatedTopicRequest = relatedTopicRequest;
        showLoading();
        MyClient.getInstance().getRelatedTopic(relatedTopicRequest,new Interfaces.IRelatedTopicListener() {
            @Override
            public void OnGetRelatedTopicSuccess(List<RelatedTopicReponse> listRelatedTopicReponse) {
                initData(listRelatedTopicReponse);
                dismisLoading();
            }

            @Override
            public void OnGetRelatedTopicFailed() {
                initData(new ArrayList<>());
                dismisLoading();
          }
        });
    }
    private void showLoading() {
        scrollPane.add(loading,BorderLayout.CENTER);
        scrollPane.revalidate();
        scrollPane.repaint();
    }
     
    private void dismisLoading(){
        scrollPane.revalidate();
        scrollPane.repaint();
    
    }
    private void showTryAgain(){
    
    }
    private void onTryAgainClick(){
    
    }

    private void initUI() {
        Icon loadingImage = new ImageIcon(this.getClass().getResource("../image/goodLoading.gif"));
        loading = new JLabel(loadingImage);
        loading.setSize(200, 200);
        loading.setLocation(600, 200);
    }
    
     JLabel loading;
    public TopicPanel() {
        initComponents();
        initUI();
    }

    public void setListKeyword(List<String> searchQuery) {
        for (int i = 0; i < searchQuery.size(); i++) {
            combokeyword.addItem(searchQuery.get(i));
        }
    }

}
