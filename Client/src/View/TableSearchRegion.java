/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;
import javalibrary.model.reponse.RegionReponse;
import javalibrary.model.reponse.SearchRegionReponse;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author trann
 */
public class TableSearchRegion extends javax.swing.JPanel {

    /**
     * Creates new form TablePanel
     */
    public TableSearchRegion() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        tbRegion = new javax.swing.JTable();

        tbRegion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tbRegion.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        tbRegion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Region search", "Care"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbRegion.setRowSelectionAllowed(false);
        tbRegion.setShowHorizontalLines(false);
        tbRegion.setShowVerticalLines(false);
        jScrollPane3.setViewportView(tbRegion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 413, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 376, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tbRegion;
    // End of variables declaration//GEN-END:variables

    public void SetData(SearchRegionReponse searchRegionReponse){
        DefaultTableModel regionModel = (DefaultTableModel) tbRegion.getModel();
        Object[] row = new Object[3];
        for (RegionReponse regionReponse : searchRegionReponse.getRegionReponses()) {
            row[0] = regionReponse.getName();
            row[1] = regionReponse.getTotal();
            regionModel.addRow(row);
        }
        tbRegion.invalidate();
    }
}
